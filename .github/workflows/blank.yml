name: üöÄ Auto Cultivation Level Generator & Weekly Winner

on:
  schedule:
    - cron: '*/15 * * * *'
    - cron: '0 0 * * 1'
  workflow_dispatch:

jobs:
  generate-level:
    if: github.event.schedule != '0 0 * * 1'
    name: üåü Generate Cultivation Level
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout Code
        uses: actions/checkout@v4

      - name: ‚ú® Cultivation System Banner
        run: |
          echo ""
          echo "‚ïî‚ïê‚ïê‚ïêüåå‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïêüåå‚ïê‚ïê‚ïê‚ïó"
          echo "    üêâSPIRIT VEINS AWAKENEDüêâ  "
          echo "  üèÆIMMORTAL SEAL UNLOCKEDüèÆ "
          echo "    üçÉQI FLOW HARMONIZEDüçÉ  "
          echo "‚ïö‚ïê‚ïê‚ïêüåå‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïêüåå‚ïê‚ïê‚ïê‚ïù"
          echo ""

      - name: üìù Generate Next Cultivation Level
        shell: bash
        run: |
          set -e
          cultivation_levels=(
            "Qi Condensation"
            "Foundation Establishment"
            "Core Formation"
            "Nascent Soul"
            "Soul Formation"
            "Soul Transformation"
            "Ascendant"
            "Illusory Yin"
            "Corporeal Yang"
            "Nirvana Scryer"
            "Nirvana Cleanser"
            "Nirvana Shatterer"
            "Heaven's Blight"
            "Nirvana Void"
            "Profound Void (Spirit Void)"
            "Calamity Void (Arcane Void)"
            "Void Tribulant"
            "Half-step into Heaven (Half-Step Heaven Trampling)"
            "Step into the Heaven (Heaven Trampling)"
          )
          # Fungsi untuk mendapatkan level kultivasi berdasarkan skor
          get_cultivation_level() {
            local score=$1
            if ((score >= 1 && score <= 14)); then
              echo "Qi Condensation"
            elif ((score >= 15 && score <= 28)); then
              echo "Foundation Establishment"
            elif ((score >= 29 && score <= 42)); then
              echo "Core Formation"
            elif ((score >= 43 && score <= 56)); then
              echo "Nascent Soul"
            elif ((score >= 57 && score <= 70)); then
              echo "Soul Formation"
            elif ((score >= 71 && score <= 84)); then
              echo "Soul Transformation"
            elif ((score >= 85 && score <= 100)); then
              echo "Ascendant"
            elif ((score >= 101 && score <= 117)); then
              echo "Illusory Yin"
            elif ((score >= 118 && score <= 134)); then
              echo "Corporeal Yang"
            elif ((score >= 135 && score <= 151)); then
              echo "Nirvana Scryer"
            elif ((score >= 152 && score <= 168)); then
              echo "Nirvana Cleanser"
            elif ((score >= 169 && score <= 185)); then
              echo "Nirvana Shatterer"
            elif ((score >= 186 && score <= 200)); then
              echo "Heaven's Blight"
            elif ((score >= 201 && score <= 360)); then
              echo "Nirvana Void"
            elif ((score >= 361 && score <= 520)); then
              echo "Profound Void (Spirit Void)"
            elif ((score >= 521 && score <= 680)); then
              echo "Calamity Void (Arcane Void)"
            elif ((score >= 681 && score <= 840)); then
              echo "Void Tribulant"
            elif ((score >= 841 && score <= 1000)); then
              echo "Half-step into Heaven (Half-Step Heaven Trampling)"
            elif ((score >= 1001)); then
              echo "Step into the Heaven (Heaven Trampling)"
            else
              echo "Unranked"
            fi
          }

          mkdir -p levels
          # Contoh: dapatkan skor pengguna dari leaderboard.json (default 1 jika tidak ditemukan)
          score=1
          if [ -f data/leaderboard.json ]; then
            user="${{ github.actor }}"
            score=$(jq -r --arg user "$user" '.[$user] // 1' data/leaderboard.json)
          fi
          LEVEL_NAME=$(get_cultivation_level $score)
          file_name="levels/level-$(date +%Y%m%d-%H%M)-${LEVEL_NAME}.txt"
          {
            echo "# Cultivation Level: $LEVEL_NAME"
            echo "# Generated at: $(date -u)"
            echo "# By: zayydenzi@gmail.com" # Ini akan diganti oleh permintaan pengguna berikutnya
            echo "# Score: $score"
          } > "$file_name"
          echo "LEVEL_NAME=$LEVEL_NAME" >> $GITHUB_ENV
          echo "SCORE=$score" >> $GITHUB_ENV
          echo "Created $file_name"

      - name: ‚è∞ Generate Formatted Time
        run: |
          echo "FORMATTED_TIME=$(TZ='Asia/Jakarta' date '+%d/%m/%y %H:%M:%S')" >> $GITHUB_ENV

      - name: üî¢ Generate Notification Counter
        id: notif-counter
        run: |
          count=$(ls levels/level-*-*.txt 2>/dev/null | wc -l)
          echo "NOTIF_COUNTER=$count" >> $GITHUB_ENV

      - name: üèÜ Update Leaderboard
        run: |
          mkdir -p data
          file="data/leaderboard.json"
          user="${{ github.actor }}"
          if ! command -v jq &>/dev/null; then
            sudo apt-get update && sudo apt-get install -y jq
          fi
          if [ ! -f "$file" ]; then
            echo '{}' > "$file"
          fi
          new_json=$(jq --arg user "$user" '
            .[$user] = (if .[$user] then .[$user] + 1 else 1 end)
          ' "$file")
          echo "$new_json" > "$file"

      - name: üåê Update Global Leaderboard (SheetBest)
        env:
          SHEETBEST_URL: ${{ secrets.SHEETBEST_URL }}
        run: |
          if ! command -v jq &>/dev/null; then
            sudo apt-get update && sudo apt-get install -y jq
          fi
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          REPO="${{ github.repository }}"
          USER="${{ github.actor }}"
          LEVEL="${{ env.LEVEL_NAME }}"
          SCORE="${{ env.SCORE }}"
          JSON=$(jq -nc --arg timestamp "$TIMESTAMP" --arg repo "$REPO" --arg user "$USER" --arg level "$LEVEL" --arg score "$SCORE" \
            '{timestamp: $timestamp, repo: $repo, user: $user, level: $level, score: $score}')
          curl -X POST "$SHEETBEST_URL" \
            -H "Content-Type: application/json" \
            -d "$JSON"

      - name: üèÜ Fetch Global Leaderboard (SheetBest)
        env:
          SHEETBEST_URL: ${{ secrets.SHEETBEST_URL }}
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          curl "$SHEETBEST_URL" > global_leaderboard.json

          NOTIF_COUNTER="${{ env.NOTIF_COUNTER }}"
          SCORE_SELF=$(jq -r --arg user "${{ github.actor }}" '[.[] | select(.user==$user)] | length' global_leaderboard.json)
          echo "SCORE_SELF=$SCORE_SELF" >> $GITHUB_ENV

          # AWAL PERUBAHAN JQ UNTUK PERBAIKAN SINTAKS DAN PERATAAN
          leaderboard=$(jq -r '
            group_by(.user)
            | map({ user: .[0].user, score: length })
            | sort_by(-.score, .user)
            | .[:10]
            | (map(.user | length) | max) as $max_user_len
            | to_entries
            | map(
                .value.user as $u
                | (.key + 1) as $rank
                | ($max_user_len - ($u | length)) as $spaces
                | ($spaces | if . > 0 then (" " * .) else "" end) as $user_pad
                | (
                    if $rank == 1 then
                      "ü•á  " # Medali + 2 spasi, untuk lebar visual 4 karakter
                    elif $rank == 2 then
                      "ü•à  " # Medali + 2 spasi
                    elif $rank == 3 then
                      "ü•â  " # Medali + 2 spasi
                    else
                      # Untuk peringkat 4+, format sebagai " X. " atau "XX. " dan pastikan panjangnya 4 karakter
                      # Buat string nomor + titik + spasi
                      ($rank | to_string) + ". " as $rank_str_with_dot_space
                      # Hitung berapa spasi di depan yang dibutuhkan
                      (4 - ($rank_str_with_dot_space | length)) as $padding_needed
                      # Tambahkan spasi dan gabungkan
                      ($padding_needed | if . > 0 then (" " * .) else "" end) + $rank_str_with_dot_space
                    end
                  ) as $rank_prefix

                | "\($rank_prefix)\($u)\($user_pad) | [Score: \(.value.score)]"
              )
            | join("\n")
          ' global_leaderboard.json)
          # AKHIR PERUBAHAN JQ

          if [ -z "$leaderboard" ] || [ "$leaderboard" == "null" ]; then
            leaderboard="No leaderboard data yet"
          fi

          echo "LEADERBOARD_GLOBAL<<EOF" >> $GITHUB_ENV
          echo "$leaderboard" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: üîî Send Notification to Telegram
        uses: appleboy/telegram-action@v0.1.0
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            <b>‚ïî‚ïê‚ïê‚ïê
